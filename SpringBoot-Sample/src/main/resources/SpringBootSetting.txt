1.「pom.xml」ファイルで「web.xml is missing and <failOnMissingWebXml> is set to true」エラーの対応
・下記のプラグインを追加する。
<plugin>
  <artifactId>maven-war-plugin</artifactId>
  <version>3.0.0</version>
</plugin>

Hint for release 3.0.0
The goal war:manifest has been removed cause it violated the principle generating files into src/ folder. Furthermore everything can be done by using an appropriate configuration for the war:war archive.
The default value for failOnMissingWebXml has been changed from true to false.

2.Mavenプロジェクトを作成する時、JDｋはデフォルトは「1.5」の対応
・下記のプラグインを追加する。
<plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<configuration>
		<source>1.8</source>
		<target>1.8</target>
		<compilerVersion>1.8</compilerVersion>
	</configuration>
</plugin>

3.[properties]ファイルで文字化け
「Window」⇒「Preferences」⇒「General」⇒「Content Types」⇒「Text」⇒「Java Properties File」
Default encodingは「UTF-8」に変更する

4.lombokを使うとき、「log cannot be resolved」エラー
https://projectlombok.org/setup/eclipse
①「lombok.jar」ファイルをダウンロードして、「Eclipse」のフォルドに入れる
②「CMD」でコマンドを開ける、項番２のファイルを実行する
例：D:\eclipse\jee-oxygen\eclipse>java -jar lombok.jar
③「Install/Update」ボタンを押す
④「Help」⇒「About Eclipse IDE」で「Lombok」を確認する

5.JSPサポートの追加
①「application.properties」ファイルに下記の追加
spring.mvc.view.suffix=.jsp
spring.mvc.view.prefix=/WEB-INF/jsp/

②JSPサポートのプラグインを追加する
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <scope>provided</scope>
    </dependency>
    
③SpringbootServletInitalizerを継承する
⑤webapp下に「WEB-INF」「jsp」フォルダの追加
